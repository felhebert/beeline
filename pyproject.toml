[tool.poetry]
name = "beeline"
version = "0.1.0"
description = "This package enables you to forecast streaming aggregations."
authors = ["Felix Hebert <fhebert@essec.edu>"]
homepage = "https://github.com/felhebert/beeline/"
repository = "https://github.com/felhebert/beeline"

[tool.poetry.dependencies]
python = "^3.8"
uvicorn = "^0.13.4"
fastapi = "^0.63.0"
starlette-prometheus-middleware = "^0.9.0"
tensorflow= "2.4.1"
pydantic = {version = "^1.7.3", extras = ["email"]}
#Hypercorn = {extras = ["uvloop"], version = "^0.11.2"}
#uvloop = "^0.14.0"

[tool.poetry.dev-dependencies]
black = "^20.8b1"
isort = "^5.7.0"
pytest = "^6.2.1"
pytest-cov = "^2.10.1"
mypy = "^0.790"
requests = "^2.25.1"
locust = "^1.4.1"
scikit-learn = "^0.23.1"

[tool.isort]
profile = "black"
multi_line_output = 3
force_sort_within_sections = "True"
order_by_type = "False"

# Coverage
[tool.coverage.run]
branch = true
source = ["rantanplan"]

[tool.coverage.report]
show_missing = true
fail_under = 90
exclude_lines = [
    # Have to re-enable the standard pragma
    "pragma: no cover",
    # Do not cover private methods
    "def __",
    # Do not cover abstract methods
    "@abstract"
]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
